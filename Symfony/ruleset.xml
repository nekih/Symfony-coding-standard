<?xml version="1.0"?>
<ruleset name="Symfony">
    <description>The Symfony coding standard.</description>

    <!-- There should not be any code in the bundle Resources directory. -->
    <exclude-pattern>*/Resources/*</exclude-pattern>

    <!-- Symfony follows the standards defined in the PSR-0, PSR-1 and PSR-2 documents. -->

    <!-- Include the whole PSR-1 standard -->
    <rule ref="PSR1"/>
    <!-- Include the whole PSR-2 standard -->
    <rule ref="PSR2">
        <exclude-pattern>src/Sylius/*</exclude-pattern>
    </rule>

        <!--

        See the [documented coding standard](http://symfony.com/doc/current/contributing/code/standards.html)
        -->


    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing"/>

    <!-- We provide our own subclass of PEAR's ClassComment and FunctionComment sniff, but these will do: -->
    <rule ref="PEAR.Commenting.InlineComment"/>

    <!-- Import Zend coding standard (which in turn imports PEAR) -->
    <rule ref="Zend">
        <!-- but exclude their code analyzer -->
        <exclude name="Zend.Debug.CodeAnalyzer"/>

        <!-- covered by Squiz ControlSignature, which enforces try/catch as well -->
        <exclude name="PEAR.ControlStructures.ControlSignature"/>

        <exclude name="PEAR.Commenting.FunctionComment.SpacingBeforeTags"/>

        <!-- do not check line length -->
        <exclude name="Generic.Files.LineLength"/>

        <!-- covered by Squiz FunctionDeclarationSniff -->
        <exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine"/>
    </rule>

    <rule ref="PSR1.Methods.CamelCapsMethodName">
        <exclude-pattern>*/spec/*</exclude-pattern>
        <exclude-pattern>*/Tests/*</exclude-pattern>
    </rule>

    <rule ref="Squiz.Scope.MethodScope">
        <exclude-pattern>*/spec/*</exclude-pattern>
    </rule>

    <!-- Don't enforce Zend's private member underscores -->
    <rule ref="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore">
        <severity>0</severity>
    </rule>

    <!-- Ignore variables that contains numbers -->
    <rule ref="Zend.NamingConventions.ValidVariableName.ContainsNumbers">
        <severity>0</severity>
    </rule>

    <!-- In practice, Symfony2 spaces multiline function calls differently than Zend -->
    <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
        <severity>0</severity>
    </rule>

    <rule ref="Symfony">
        <exclude name="Symfony.Commenting"/>
        <!-- <exclude name="Symfony.Commenting.Annotations.Invalid"/> -->
        <!-- @see https://github.com/djoos/Symfony-coding-standard/issues/120 -->
        <!-- <exclude name="Symfony.Commenting.FunctionComment"/> -->
        <!-- @see https://github.com/djoos/Symfony-coding-standard/issues/119 -->
        <!-- <exclude name="Symfony.Functions.ReturnType.Invalid"/> -->
        <!-- @see https://github.com/djoos/Symfony-coding-standard/issues/27 -->
        <!-- <exclude name="PEAR.Functions.FunctionCallSignature"/> -->
        <!-- @see https://github.com/djoos/Symfony-coding-standard/issues/44 -->
        <!-- <exclude name="Squiz.Strings.ConcatenationSpacing"/> -->
        <!-- @see https://github.com/djoos/Symfony-coding-standard/issues/122 -->
        <!-- <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterBrace"/>
        <exclude name="Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore"/>
        <exclude name="PEAR.WhiteSpace.ScopeClosingBrace.Line"/>
        <exclude name="Symfony.Formatting.BlankLineBeforeReturn.Invalid"/> -->
    </rule>
</ruleset>
